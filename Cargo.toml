[package]
name = "getifs"
version = "0.3.3"
edition = "2021"
repository = "https://github.com/al8n/getifs"
homepage = "https://github.com/al8n/getifs"
documentation = "https://docs.rs/getifs"
description = "A bunch of cross-platform network tools for fetching interfaces, multicast addresses, local ip addresses, private ip addresses, public ip addresses and etc."
license = "MIT OR Apache-2.0"
rust-version = "1.63.0"
keywords = ["local-ip-address", "interface", "network-interface", "mtu", "getifaddrs"]
categories = ["network-programming"]

[[bench]]
path = "benches/interfaces.rs"
name = "interfaces"
harness = false

[[bench]]
path = "benches/local_ip_address.rs"
name = "local_ip_address"
harness = false

[[bench]]
path = "benches/gateway.rs"
name = "gateway"
harness = false

[features]
default = []
# serde = ["dep:serde", "ipnet/serde", "smallvec-wrapper/serde", "hardware-address/serde"]

[dependencies]
bitflags = "2"
cfg-if = "1"
either = "1"
hardware-address = "0.1"
iprobe = "0.1"
ipnet = "2"
iprfc = "0.2"
paste = "1"
smol_str = "0.3"
smallvec-wrapper = "0.3"
triomphe = "0.1"

# serde = { version = "1", features = ["derive"], optional = true }

[target.'cfg(all(not(windows), not(any(target_os = "android", target_os = "linux"))))'.dependencies]
libc = "0.2"

[target.'cfg(all(any(target_os = "android", target_os = "linux")))'.dependencies]
either = "1"
rustix = { version = "1", features = ["net", "param"] }
linux-raw-sys = { version = "0.10", features = ["if_arp", "net", "netlink"] }

[target.'cfg(all(any(target_os = "android", target_os = "linux")))'.dev-dependencies]
rustix = { version = "1", features = ["net", "param", "process"] }


[target.'cfg(windows)'.dependencies]
windows-sys = { version = "0.59", features = ["Win32_Networking_WinSock", "Win32_NetworkManagement", "Win32_NetworkManagement_IpHelper", "Win32_NetworkManagement_Ndis"] }
widestring = "1"

[dev-dependencies]
criterion = "0.6"
network-interface = "2"
local-ip-address = "0.6"
which = "8"
scopeguard = "1"


[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[lints.rust]
rust_2018_idioms = "warn"
single_use_lifetimes = "warn"
unexpected_cfgs = { level = "warn", check-cfg = [
  'cfg(apple)',
  'cfg(bsd_like)',
  'cfg(freebsdlike)',
  'cfg(netbsdlike)',
  'cfg(linux_like)',
] }
